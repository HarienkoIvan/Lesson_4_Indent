
/* Обнуление стилей */
*,
*::before *::after {
    margin: 0;
    padding: 0;
    border: 0;
    box-sizing: border-box;
}

li {
    list-style: none;
}

a:visited {
    text-decoration: none;
}

a:hover {
    text-decoration: none;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-weight: inherit;
    font-size: inherit;
}

img {
    vertical-align: top;
}

html,body {
    height: 100%;
}

/* По умолчанию 16 рх */
html {
    font-size: 16px;
}

body {
  line-height: 1;
}

.wrapper {
    min-width: 100%;
    overflow: hidden;
}


/* ...........Lesson 4.................... */


/* Отступы внутренние */

/* padding
Внутренние отступы элемента.
При указании поля в процентах, значение считается от ширины родителя эелемента.
Свойства не наследуется.

    padding: 0px 0px 0px 0px; = 
    padding-top: 0; 
    padding-right: 0;
    padding-bottom: 0;
    padding-left: 0;

 padding: 50px;  (отступ со всех сторон)


padding; со всех сторон;
padding; сверху справа снизу слева;

padding; сверху_снизу справа_слева;
padding; сверху справа_слева снизу;

*/


/* Отступы внешние */
/* 
margin; со всех сторон 
margin; сверху справа снизу слева;

margin; сверху_снизу справа_слева;
margin; сверху справа_слева снизу;
*/

/*     margin: 0px 0px 0px 0px; = 
    margin-top: 0; 
    margin-right: 0;
    margin-bottom: 0;
    margin-left: 0;
 */

 
.block {
    background-color: green;
    color: white;
    font-size: 30px;
    padding: 10px;
    margin: 30px 10px 0px 0px;
}


.block_2 {
    background-color: blue;
    color: chartreuse;
    font-size: 25px;
    padding: 10px;
    margin: 10px 20px 0px 15px;
}

.block_3 {
    background-color:brown;
    color: blueviolet;
    font-size: 20px;
    padding: 10px;
    margin: 10px 40px 30px 30px; 

}




 /* width (ширина) 
 Устанавливает ширину блочных тегов и блочно-строчных  
Свойство не наследуется.
width: 100px
width: 10%  */


/* .block {
  width: 500px;

} */


/* box-sizing */
/* 
Применяется для изменения алгоритма расчета ширины и высоты эелемента.
Свойство наследуется.


content-box - Основывается на стандартах CSS, при этом свойства width и height 
задают ширину и высоту контента и не включают в себя значния полей и границ.

border-box - Включают в себя значения полей и границ, но не отступов (margin)

padding-box - Свойста width и  height включают в себя значпния полей, 
но не отступов (margin) и границ (border)
*/

/* 
.block {
    margin: 0px auto;
} */

/* Центрирование обьекта с помощью margin со значениями auto 
1. Обьект должен быть блочный.
2. Обьект должен быть ограничен по ширине, быть уже чем родительский.
3. margin: 0px auto;
*/


.block {
max-width: 400px;
margin: 0px auto; 
}

/* max-width
Устанавливает максимальную ширину блочных и блочно-строчных тегов
*/

/* min-width
Устанавливает минимальную ширину блочных и блочно-строчных тегов
*/


/* height
Устанавливает высоту блочных и некоторых строчных (например img)
Свойсто не наследуется.
height: 100px;
height: 10%;
*/

/* min-height
Свойсто не наследуется
*/

/* max-height
Свойсто не наследуется
*/


/* overflow */
/*Управляет отображением содержанием блочного элемента.
visible - Отображает все сожеражание элемента, даже за перделами установленной высоты и ширины. 
hidden - Отображает тоьько область внутри элемента, остальнрое будет скрыто.
scroll - Всегда добавляются области прокурутки.
auto - Полосы прокуртки добавляются только при необходимости.
 */


.block {
max-height: 300px;
overflow: auto;
}

.inline {
     background-color: aquamarine;
     color: blueviolet;
     font-size: 30px;
     margin: 50px;
}


.image {
   width: 500px; 
   padding: 20px;
   background-color: rgb(63, 57, 134);
   margin: 50px 0px 0px 50px;
}

/* display
Многоцелевое свойство, кторое определяет, как элемент должен быть показан в документе.
Свойстов не наследунтся.

block - Элемент показывается как блочный, Применение этого значенимя для встроенных элементов, например
для тега <span>, заставляет его вести подобно блокам - происходит перенос строк в начале 
и в конце содержимого.

inline - Элемент отображается как встроенный. Использование блочных тегов, таких
как <div> и <p>, автоматически создает перенос и показывает содержимое этих
тегов с новой строки. Значение inline отменяет эту особенность, поэтому содержимое
блочных элементов начинается с того места где окончился предыдущий элемент.

inline-block - Это значение генерирует блочный элемент, который обтикается другими элементами
веб страницы подобно встроенному элементу.
Фактически такой элемент по своему действию похож на встраиваемые элементы (вроде тега <img>)
При этом его внутренняя часть формируется как блочный элемент, а сам элемент - как встроенный.

none - Временно удаляет элемент из доумент. Занимаемое им место не резервируется 
и веб страница формируется так, словно элемента и небыло.
*/

.link {
    font-size: 80px;
    color: red;
    margin: 0px 0px 50px 0px;
    /* По умолчанию */
    display: inline;
}

/* header
display; block (по умолчанию)

image 
display; inline-block (по умолчанию)

text 
display none
font-size 50px

*/